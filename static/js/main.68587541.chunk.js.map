{"version":3,"sources":["shared/Styles.js","App.js","reportWebVitals.js","index.js"],"names":["Global","createGlobalStyle","StyledApp","styled","div","props","color","theme","colors","lineare1","secondary","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","primary","gray200","gray300","gray400","gray500","gray800","green","blue","blueDark","dark1","document","getElementById"],"mappings":"sJAuBaA,EAASC,YAAH,4HAUNC,EAAYC,IAAOC,IAAV,wIAGL,SAAAC,GAAK,OAAIA,EAAMC,OAASD,EAAME,MAAMC,OAAOC,YAEhD,SAAAJ,GAAK,OAAIA,EAAMC,OAASD,EAAME,MAAMC,OAAOE,a,OC1BxCC,MAVf,SAAaN,GACV,OACG,8BACG,cAACH,EAAD,2BAAeG,GAAf,2BCOMO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACN,qCACG,cAACtB,EAAD,IACA,cAAC,IAAD,CAAeO,MHNA,CAClBC,OAAQ,CACLe,QAAS,UACTb,UAAW,OACXc,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,MAAO,UACPC,KAAM,UACNC,SAAU,UACVtB,SAAU,oCACVuB,MAAO,mBGPP,SACG,cAAC,EAAD,MAHN,OAMDC,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.68587541.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from \"styled-components\";\r\n\r\n\r\n//!theme\r\n\r\nexport const theme = {\r\n   colors: {\r\n      primary: \"#03e9f4\",\r\n      secondary: \"#fff\",\r\n      gray200: \"#edf2f7\",\r\n      gray300: \"#e2e8f0\",\r\n      gray400: \"#cbd5e0\",\r\n      gray500: \"#a0aec0\",\r\n      gray800: \"#2d3748\",\r\n      green: \"#009688\",\r\n      blue: \"#5677fc\",\r\n      blueDark: \"#3b50ce\",\r\n      lineare1: \"linear-gradient(#141e30, #243b55)\",\r\n      dark1: \"rgba(0,0,0,.5)\",\r\n   }\r\n}\r\n\r\n//!Global\r\nexport const Global = createGlobalStyle`\r\n* {\r\n   margin: 0;\r\n   padding: 0;\r\n   box-sizing: border-box;\r\n   font-family: sans-serif;\r\n}\r\n`;\r\n\r\n//?App\r\nexport const StyledApp = styled.div`\r\n   text-align: center;\r\n   box-sizing: border-box;\r\n   background: ${props => props.color || props.theme.colors.lineare1};\r\n   height: 100vh;\r\n   color: ${props => props.color || props.theme.colors.secondary};\r\n`;","import { StyledApp } from \"./shared/Styles\";\n\nfunction App(props) {\n   return (\n      <div>\n         <StyledApp {...props}>\n            Hello\n         </StyledApp>\n      </div>\n   );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Global, theme } from './shared/Styles';\nimport {ThemeProvider} from \"styled-components\";\n\n\nReactDOM.render(\n   <>\n      <Global />\n      <ThemeProvider theme={theme}>\n         <App />\n      </ThemeProvider>,\n   </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}